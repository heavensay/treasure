<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.heavensay</groupId>
        <artifactId>treasure-parent-bom</artifactId>
        <version>${revision}</version>
        <relativePath>treasure-parent-bom/pom.xml</relativePath>
    </parent>

    <groupId>com.github.heavensay</groupId>
    <artifactId>treasure-parent</artifactId>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>
    <description>the parent project of treasure</description>

    <properties>
        <!-- common properties -->
        <skip_maven_deploy>false</skip_maven_deploy>

        <!-- Test libs -->
        <junit_version>4.12</junit_version>
        <java.version>1.8</java.version>

        <!-- for maven compiler plugin -->
        <java_source_version>1.8</java_source_version>
        <java_target_version>1.8</java_target_version>
        <file_encoding>UTF-8</file_encoding>
        <maven_compiler_version>3.6.0</maven_compiler_version>
    </properties>

    <modules>
        <module>treasure-base</module>
        <module>treasure-parent-bom</module>
        <module>treasure-common</module>
        <module>treasure-datatrail</module>
        <module>treasure-demo</module>
        <module>treasure-spring</module>
        <module>treasure-package</module>
        <module>treasure-kit</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit_version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <!-- 子模块通用的插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven_compiler_version}</version>
                <configuration>
                    <compilerArgument>-proc:none</compilerArgument>
                    <fork>true</fork>
                    <source>${java_source_version}</source>
                    <target>${java_target_version}</target>
                    <encoding>${file_encoding}</encoding>
                </configuration>
            </plugin>
            <!--使单元测试不影响项目的编译-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <skip>true</skip><!--跳过单元测试-->
                    <!--<testFailureIgnore>true</testFailureIgnore>--><!--这个网上很多的解决方式是这个,其实这个,其实这个配置后打包还是会编译单元测试类的,只是忽略编译单元测试类的错误.-->
                </configuration>
            </plugin>
            <!--  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>${skip_maven_deploy}</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>